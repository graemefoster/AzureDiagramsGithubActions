name: 'graemefoster-azurediagrams-composite-action'
description: 'Runs AzureDiagramGenerator (as dotnet tool)'
branding:
  icon: 'command'
  color: 'green'
inputs:
  subscriptionId:
    description: 'Azure Subscription Id'
    required: true
  resourceGroup:
    description: 'Azure Resource Group to match on. Regexes supported. Also * can be used as a simple non greedy wildcard (he*o) will match a resource group called hello'
    required: true
  accessToken:
    description: 'Access Token that can read the resources'
    required: true
  condensed:
    description: 'Collapse private endpoints / vm disks to produce a simple view. Useful for large architectures'
    required: true
    default: 'true'
  showDiagnostics:
    description: 'Show flows from services to diagnostics like App Insights / Azure Monitor'
    required: true
    default: 'false'
  showIdentity:
    description: 'Show connection from services to AAD for Managed Identities'
    required: true
    default: 'false'
  showRuntime:
    description: 'Show runtime flows defined on the management plane (e.g. container pulls)'
    required: true
    default: 'true'
  showInferred:
    description: 'Look into configuration settings to infer more links between resources'
    required: true
    default: 'false'
  outputFileName:
    description: 'Output file name to write to (will write to the working directory)'
    required: true
runs:
  using: 'composite'
  steps:
    - run: dotnet tool install --global AzureDiagramGenerator --version 0.6.30
      shell: bash
    - run: |
        AzureDiagramGenerator --subscription-id "${{ inputs.subscriptionId }}" \
                              --resource-group "${{ inputs.resourceGroup }}" \
                              --output-file-name "${{ inputs.outputFileName }}" \
                              --condensed "${{  inputs.condensed}}" \
                              --show-diagnostics "${{  !inputs.showDiagnostics }}" \
                              --show-identity "${{  !inputs.showIdentity }}" \
                              --show-runtime "${{  !inputs.showRuntime }}"
                              --show-inferred "${{  !inputs.showInferred }}"
                              --output-png false
      shell: bash
